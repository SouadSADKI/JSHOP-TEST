name: CodeQL SAST and OWASP ZAP DAST with DefectDojo

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # CodeQL SAST job for static code analysis
  codeql-sast:
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript'

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Upload CodeQL Report to DefectDojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          ENGAGEMENT_ID: ${{ secrets.ENGAGEMENT_ID }}
        run: |
          if [ -f "results.sarif" ]; then
            curl -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
              -H "Authorization: Token $DEFECTDOJO_API_KEY" \
              -H "accept: application/json" \
              -F "scan_type=CodeQL" \
              -F "file=@results.sarif" \
              -F "engagement=$ENGAGEMENT_ID" \
              -F "auto_create_context=true" \
              -F "active=true" \
              -F "verified=false"
          else
            echo "CodeQL SARIF report not found."

  # OWASP ZAP DAST job for dynamic application testing
  owasp-zap-dast:
    runs-on: ubuntu-latest

    steps:
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: "https://your-target-url.com" # Replace with your actual target URL
          format: "xml"
          fail_on_warn: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload OWASP ZAP Report to DefectDojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
          ENGAGEMENT_ID: ${{ secrets.ENGAGEMENT_ID }}
        run: |
          REPORT_FILE="zap.out.xml"
          if [ -f "$REPORT_FILE" ]; then
            curl -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
              -H "Authorization: Token $DEFECTDOJO_API_KEY" \
              -H "accept: application/json" \
              -F "scan_type=ZAP Scan" \
              -F "file=@$REPORT_FILE" \
              -F "engagement=$ENGAGEMENT_ID" \
              -F "auto_create_context=true" \
              -F "active=true" \
              -F "verified=false"
          else
            echo "OWASP ZAP report not found."
