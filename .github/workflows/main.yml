name: Juice Shop CI/CD with DevSecOps

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - main

jobs:
  # SAST using CodeQL
  codeql-sast:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript'

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Upload SAST Report to DefectDojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
          -H "Authorization: Token $DEFECTDOJO_API_KEY" \
          -H "accept: application/json" \
          -F "scan_type=CodeQL" \
          -F "file=@results.sarif" \
          -F "engagement=1"  # Replace with your actual engagement ID

  # SCA using Whitesource Bolt
  sca-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Whitesource Bolt Scan
        uses: whitesource/bolt-action@v1
        env:
          WHITESOURCE_API_KEY: ${{ secrets.WHITESOURCE_TOKEN }}

      - name: Upload Whitesource Bolt Report to DefectDojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
          -H "Authorization: Token $DEFECTDOJO_API_KEY" \
          -H "accept: application/json" \
          -F "scan_type=Whitesource Scan" \
          -F "file=@whitesource-bolt-report.json" \
          -F "engagement=1"  # Replace with your actual engagement ID

  # Container Image Security Scanning
  container-image-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Pull Juice Shop image from Docker Hub
        run: docker pull bkimminich/juice-shop:latest

      - name: Run Trivy Scan on Docker Image
        uses: aquasecurity/trivy-action@main  # Use "main" to always get the latest
        with:
          image-ref: 'bkimminich/juice-shop:latest'
          format: 'json'
          output: 'trivy-report.json'

      - name: Upload Trivy Scan Report to DefectDojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DEFECTDOJO_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL }}
        run: |
          curl -X POST "${{ secrets.DEFECTDOJO_URL }}/api/v2/import-scan/" \
          -H "Authorization: Token $DEFECTDOJO_API_KEY" \
          -H "accept: application/json" \
          -F "scan_type=Container Scan" \
         
